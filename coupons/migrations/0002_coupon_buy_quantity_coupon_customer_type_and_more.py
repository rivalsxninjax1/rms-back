# Generated by Django 5.1.2 on 2025-09-02 04:30

import django.core.validators
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('coupons', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='coupon',
            name='buy_quantity',
            field=models.PositiveIntegerField(blank=True, help_text='Number of items to buy (for Buy X Get Y offers)', null=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='customer_type',
            field=models.CharField(choices=[('ALL', 'All Customers'), ('NEW_ONLY', 'New Customers Only'), ('EXISTING_ONLY', 'Existing Customers Only'), ('VIP_ONLY', 'VIP Customers Only')], default='ALL', help_text='Which type of customers can use this coupon', max_length=20),
        ),
        migrations.AddField(
            model_name='coupon',
            name='description',
            field=models.TextField(blank=True, help_text='Public description shown to customers', max_length=500),
        ),
        migrations.AddField(
            model_name='coupon',
            name='discount_type',
            field=models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED_AMOUNT', 'Fixed Amount'), ('FREE_SHIPPING', 'Free Shipping'), ('BUY_X_GET_Y', 'Buy X Get Y Free')], default='PERCENTAGE', help_text='Type of discount to apply', max_length=20),
        ),
        migrations.AddField(
            model_name='coupon',
            name='first_order_only',
            field=models.BooleanField(default=False, help_text='Whether this coupon can only be used on first orders'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='fixed_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fixed discount amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='coupon',
            name='get_quantity',
            field=models.PositiveIntegerField(blank=True, help_text='Number of items to get free (for Buy X Get Y offers)', null=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='max_uses_per_customer',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum number of times each customer can use this coupon', null=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='maximum_discount_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Maximum discount amount (for percentage discounts)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='coupon',
            name='minimum_order_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Minimum order amount required to use this coupon', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='coupon',
            name='name',
            field=models.CharField(default='Coupon', help_text='Internal name for the coupon', max_length=128),
        ),
        migrations.AddField(
            model_name='coupon',
            name='stackable_with_loyalty',
            field=models.BooleanField(default=True, help_text='Whether this coupon can be combined with loyalty discounts'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='stackable_with_other_coupons',
            field=models.BooleanField(default=False, help_text='Whether this coupon can be combined with other coupons'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='total_discount_given',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total discount amount given through this coupon', max_digits=12),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='active',
            field=models.BooleanField(default=True, help_text='Whether this coupon is currently active'),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='code',
            field=models.CharField(help_text='Unique coupon code (case-insensitive)', max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='max_uses',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum number of times this coupon can be used (total)', null=True),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='percent',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage discount (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))]),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='phrase',
            field=models.CharField(blank=True, help_text='Alternative phrase that can be used instead of code', max_length=128),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='times_used',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this coupon has been used'),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='valid_from',
            field=models.DateTimeField(blank=True, help_text='When this coupon becomes valid', null=True),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='valid_to',
            field=models.DateTimeField(blank=True, help_text='When this coupon expires', null=True),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code'], name='coupons_cou_code_3bf721_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['active', 'valid_from', 'valid_to'], name='coupons_cou_active_57a44c_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['discount_type'], name='coupons_cou_discoun_35e025_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['customer_type'], name='coupons_cou_custome_333a86_idx'),
        ),
    ]
