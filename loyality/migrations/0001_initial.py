# Generated by ChatGPT to introduce TipLoyaltySetting singleton model

from __future__ import annotations
from decimal import Decimal

from django.db import migrations, models


def create_initial_row(apps, schema_editor):
    TipLoyaltySetting = apps.get_model("loyality", "TipLoyaltySetting")
    if not TipLoyaltySetting.objects.filter(pk=1).exists():
        TipLoyaltySetting.objects.create(
            pk=1,
            active=True,
            threshold_tip_total=Decimal("0.00"),
            discount_amount=Decimal("0.00"),
            message_template="You are our loyal customer and you get a discount!",
        )


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TipLoyaltySetting",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("active", models.BooleanField(default=True)),
                ("threshold_tip_total", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("discount_amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("message_template", models.TextField(
                    blank=True,
                    default="You are our loyal customer and you get a discount!",
                    help_text="Template shown when the loyalty discount applies.",
                )),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tip Loyalty Setting",
                "verbose_name_plural": "Tip Loyalty Settings",
            },
        ),
        migrations.RunPython(create_initial_row, reverse_code=migrations.RunPython.noop),
    ]
