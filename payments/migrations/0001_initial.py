# Generated by Django 5.1.2 on 2025-09-02 04:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(default='usd', max_length=10)),
                ('subtotal_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tip_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery', models.CharField(default='DINE_IN', help_text='One of: "DINE_IN", "UBER_EATS", "DOORDASH"', max_length=20)),
                ('status', models.CharField(choices=[('created', 'Created'), ('paid', 'Paid'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='created', max_length=12)),
                ('stripe_session_id', models.CharField(blank=True, max_length=120)),
                ('stripe_payment_intent', models.CharField(blank=True, max_length=120)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_item_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=200)),
                ('unit_amount_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('line_total_cents', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='payments.order')),
            ],
            options={
                'ordering': ['order_id', 'id'],
            },
        ),
        migrations.CreateModel(
            name='StripePaymentIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idempotency_key', models.UUIDField(help_text='Unique key to prevent duplicate payment processing', unique=True)),
                ('stripe_payment_intent_id', models.CharField(help_text='Stripe Payment Intent ID', max_length=255, unique=True)),
                ('stripe_client_secret', models.CharField(blank=True, help_text='Client secret for frontend confirmation', max_length=255)),
                ('amount_cents', models.PositiveIntegerField(help_text='Payment amount in cents', validators=[django.core.validators.MinValueValidator(50)])),
                ('currency', models.CharField(default='usd', help_text='ISO currency code', max_length=3)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], default='requires_payment_method', help_text='Current Stripe payment intent status', max_length=30)),
                ('payment_method_id', models.CharField(blank=True, help_text='Stripe Payment Method ID', max_length=255)),
                ('payment_method_type', models.CharField(blank=True, help_text='Payment method type (card, bank_transfer, etc.)', max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional payment metadata')),
                ('last_webhook_event_id', models.CharField(blank=True, help_text='Last processed webhook event ID', max_length=255)),
                ('webhook_processing_attempts', models.PositiveIntegerField(default=0, help_text='Number of webhook processing attempts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='When payment was confirmed', null=True)),
                ('order', models.ForeignKey(blank=True, help_text='Associated order if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stripe_payment_intents', to='orders.order')),
                ('user', models.ForeignKey(blank=True, help_text='User who initiated the payment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stripe_payment_intents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_refund_id', models.CharField(help_text='Stripe refund ID', max_length=255, unique=True)),
                ('amount_cents', models.PositiveIntegerField(help_text='Refund amount in cents', validators=[django.core.validators.MinValueValidator(1)])),
                ('currency', models.CharField(help_text='ISO currency code', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='pending', help_text='Refund status', max_length=20)),
                ('reason', models.CharField(blank=True, help_text='Reason for refund', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the refund')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When refund was processed by Stripe', null=True)),
                ('initiated_by', models.ForeignKey(blank=True, help_text='Admin user who initiated the refund', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_refunds', to=settings.AUTH_USER_MODEL)),
                ('payment_intent', models.ForeignKey(help_text='Original payment intent', on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.stripepaymentintent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StripeWebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_event_id', models.CharField(help_text='Stripe event ID', max_length=255, unique=True)),
                ('event_type', models.CharField(help_text='Stripe event type (e.g., payment_intent.succeeded)', max_length=100)),
                ('processed', models.BooleanField(default=False, help_text='Whether this event has been successfully processed')),
                ('processing_attempts', models.PositiveIntegerField(default=0, help_text='Number of processing attempts')),
                ('event_data', models.JSONField(help_text='Full Stripe event data')),
                ('last_error', models.TextField(blank=True, help_text='Last processing error if any')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When event was successfully processed', null=True)),
                ('payment_intent', models.ForeignKey(blank=True, help_text='Associated payment intent if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhook_events', to='payments.stripepaymentintent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='stripepaymentintent',
            index=models.Index(fields=['stripe_payment_intent_id'], name='payments_st_stripe__417bc8_idx'),
        ),
        migrations.AddIndex(
            model_name='stripepaymentintent',
            index=models.Index(fields=['idempotency_key'], name='payments_st_idempot_8fa902_idx'),
        ),
        migrations.AddIndex(
            model_name='stripepaymentintent',
            index=models.Index(fields=['status'], name='payments_st_status_9b55fe_idx'),
        ),
        migrations.AddIndex(
            model_name='stripepaymentintent',
            index=models.Index(fields=['user', '-created_at'], name='payments_st_user_id_fd8843_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['stripe_refund_id'], name='payments_pa_stripe__5345b8_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['status'], name='payments_pa_status_b3312f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['-created_at'], name='payments_pa_created_23662c_idx'),
        ),
        migrations.AddIndex(
            model_name='stripewebhookevent',
            index=models.Index(fields=['stripe_event_id'], name='payments_st_stripe__a444ea_idx'),
        ),
        migrations.AddIndex(
            model_name='stripewebhookevent',
            index=models.Index(fields=['event_type'], name='payments_st_event_t_802e5e_idx'),
        ),
        migrations.AddIndex(
            model_name='stripewebhookevent',
            index=models.Index(fields=['processed'], name='payments_st_process_0ea60a_idx'),
        ),
        migrations.AddIndex(
            model_name='stripewebhookevent',
            index=models.Index(fields=['-created_at'], name='payments_st_created_14344e_idx'),
        ),
    ]
